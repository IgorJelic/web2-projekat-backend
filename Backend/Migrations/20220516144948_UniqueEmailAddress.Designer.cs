// <auto-generated />
using System;
using Backend.DbInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(DostavaAppDbContext))]
    [Migration("20220516144948_UniqueEmailAddress")]
    partial class UniqueEmailAddress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend.Models.Korisnik", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktiviran")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProfilnaSlikaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Backend.Models.PoruceniProizvod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Kolicina")
                        .HasColumnType("float");

                    b.Property<long>("PorudzbinaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProizvodId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PorudzbinaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("PoruceniProizvodi");
                });

            modelBuilder.Entity("Backend.Models.Porudzbina", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaDostave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Komentar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Potvrdjena")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VremeIsporuke")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("Backend.Models.Proizvod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Sastojci")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("Backend.Models.PoruceniProizvod", b =>
                {
                    b.HasOne("Backend.Models.Porudzbina", "Porudzbina")
                        .WithMany("PoruceniProizvodi")
                        .HasForeignKey("PorudzbinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Proizvod", "Proizvod")
                        .WithMany("PoruceniProizvodi")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Porudzbina");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("Backend.Models.Porudzbina", b =>
                {
                    b.HasOne("Backend.Models.Korisnik", "Korisnik")
                        .WithMany("MojePorudzbine")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Backend.Models.Korisnik", b =>
                {
                    b.Navigation("MojePorudzbine");
                });

            modelBuilder.Entity("Backend.Models.Porudzbina", b =>
                {
                    b.Navigation("PoruceniProizvodi");
                });

            modelBuilder.Entity("Backend.Models.Proizvod", b =>
                {
                    b.Navigation("PoruceniProizvodi");
                });
#pragma warning restore 612, 618
        }
    }
}
